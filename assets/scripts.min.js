"use strict";
var ContactForm = {
        handlers: {},
        inputs: ["input[name=Nombre]", "input[name=Telefono]", "input[name=Email]", "textarea[name=Mensaje]"],
        addForm: function(e) {
            e instanceof jQuery && e.each(function() {
                var e = $(this);
                ContactForm.getInputs(e).on("change", ContactForm.onInputChange), e.on("submit", ContactForm.onSubmit)
            })
        },
        ajaxRequest: function(e, n) {
            $.ajax({
                data: e,
                type: "GET",
                url: "https://goplek.com/mailer/send-mail.php",
                beforeSend: n.beforeSend,
                error: n.error,
                success: n.success
            })
        },
        getInputs: function(e) {
            return e.find(ContactForm.inputs.join())
        },
        isInputValid: function(e) {
            var n = e.attr("name"),
                t = e.val();
            if (!t) return !1;
            switch (n) {
                case "Nombre":
                    return t.length > 3;
                case "Telefono":
                    return 10 === t.replace(/[^0-9]/g, "").length;
                case "Email":
                    var o = /[\w-\.]{3,}@([\w-]{2,}\.)*([\w-]{2,}\.)[\w-]{2,4}/;
                    return o.test(t);
                case "Mensaje":
                    return !0;
                default:
                    return console && console.log && console.log("Unknown validation type: " + n), !0
            }
        },
        onInputChange: function() {
            var e = $(this),
                n = e.data("error-element");
            if (ContactForm.isInputValid(e)) n && (n.fadeOut(function() {
                n.remove()
            }), e.data("error-element", null), e.css("border", "1px solid #dcdcdc"));
            else {
                if (!n) {
                    var t = e.data("clue") || "Inválido";
                    n = $("<span>"), n.insertBefore(e).css({
                        display: "none",
                        color: "#f00"
                    }).text(t).fadeIn(), e.data("error-element", n)
                }
                e.css("border", "1px solid #f00")
            }
        },
        onSubmit: function(e) {
            e.preventDefault();
            var n = $(this),
                t = !0;
            if (ContactForm.getInputs(n).each(function() {
                    var e = $(this);
                    ContactForm.isInputValid(e) || (e.trigger("change"), t = !1)
                }), t) {
                var o = {
                        host: location.hostname,
                        data: n.serialize()
                    },
                    i = {},
                    a = ContactForm.handlers,
                    r = $('<div class="server-response">'),
                    s = function(e) {
                        n.empty().append(e)
                    };
                i.beforeSend = a.beforeSend || function(e, n) {
                        r.text("Enviando..."), s(r)
                    }, i.error = a.error || function(e, n, t) {
                        r.text("Error: No se pudo entregar el mensaje."), s(r)
                    }, i.success = a.success || function(e, n, t) {
                        parseInt(e) ? r.text("El mensaje fue entregado correctamente.") : r.text("No se pudo entregar el mensaje. Intentalo mas tarde."), s(r)
                    }, ContactForm.ajaxRequest(o, i)
            } else alert("Hay campos inválidos, por favor revisa las indicaciones en rojo.")
        },
        resetFormInputs: function(e) {
            ContactForm.getInputs(e).val("")
        }
    },
    general = {
        $body: $("body"),
        $window: $(window),
        init: function() {
            general.MobileNavigation.init(), general.Navigation.init(), general.OuterWrapper.init(), general.CategoryMenu.init(), general.CategoryFilter.init(), general.$window.on("load", function() {
                general._onLoad()
            }), general.$window.on("resize", function() {
                general._onResize()
            }), general.$window.on("scroll", function() {
                general._onScroll()
            })
        },
        _onLoad: function() {},
        _onResize: function() {},
        _onScroll: function() {},
        centerItem: function(e, n) {
            var t = n ? e.parent() : $(window),
                o = e.css("position"),
                i = (t.width() - e.outerWidth()) / 2,
                a = (t.height() - e.outerHeight()) / 2;
            "absolute" === o || "fixed" === o ? e.css({
                left: i,
                top: a
            }) : e.css({
                "margin-left": i,
                "margin-top": a
            })
        },
        scrollTo: function(e, n, t) {
            var o = $(e);
            if (o.length) {
                var i = n || 1e3,
                    a = t || 0,
                    r = o.offset().top - a;
                $("html, body").stop().animate({
                    scrollTop: r
                }, i)
            }
        },
        MobileNavigation: {
            elem: null,
            init: function() {
                this.elem = $(".mobile-navigation"), this.elem.length
            }
        },
        Navigation: {
            elem: null,
            toggleBtn: null,
            init: function() {
                if (this.elem = $(".navigation"), this.elem.length) {
                    var e = this;
                    this.toggleBtn = $(".toggle-btn"), this.toggleBtn.on("click", function() {
                        e.openMobileNavigation()
                    })
                }
            },
            openMobileNavigation: function() {
                for (var e = [general.MobileNavigation.elem, general.$body, this.toggleBtn], n = 0; n < e.length; n++) {
                    var t = e[n];
                    t.toggleClass("mobile-navigation-open")
                }
            }
        },
        OuterWrapper: {
            elem: null,
            init: function() {
                this.elem = $(".outer-wrapper"), this.elem.length
            }
        },
        CategoryMenu: {
            elem: null,
            categoryItems: null,
            subCategoryItems: null,
            init: function() {
                this.elem = $(".category-menu"), this.elem.length && (this.categoryItems = this.elem.find(".category-item"), this.subCategoryItems = this.elem.find(".sub-category-item"), this.categoryItems.on("click", function(e) {
                    general.CategoryMenu._onClick(e, $(this))
                }), this.subCategoryItems.on("click", function(e) {
                    general.CategoryMenu._onClick(e, $(this))
                }), $(this.elem = $(".category-menu").get(0)).on("click", function() {
                    general.CategoryMenu._showMenu($(this))
                }))
            },
            _onClick: function(e, n) {
                e.stopPropagation(), n.hasClass("active") ? n.removeClass("active") : (n.siblings().removeClass("active"), n.addClass("active"))
            },
            _showMenu: function(e) {
                e.hasClass("show") ? (e.removeClass("show"), e.parent().removeClass("show")) : (e.addClass("show"), e.parent().addClass("show"))
            }
        },
        CategoryFilter: {
            elem: null,
            right: null,
            init: function() {
                (this.elem = $(".filters-content")).length && (this.right = this.elem.find(".layout-right"), this.right.on("click", function() {
                    general.CategoryFilter._onClick($(this))
                }))
            },
            _onClick: function(e) {
                e.hasClass("active") ? e.removeClass("active") : e.addClass("active")
            }
        }
    };
$(general.init);

function printspan() {
    
    var span= $('table .sp-price');
    
     span.prepend('<span>Descuento</span><br>');
  }
  printspan();
